Dependencies
* express
* bodyParser
* massive
* express-session
* dotenv
* react
* react-router-dom
* auth0-lock
* redux
* react-redux
* axios

* redux-promise-middleware

----------------------------
Let's talk about
----------------------------

cors
browserrouter vs hashrouter
props used more
proxy
combineReducers

routes
client side
  #/ {Home}
  #/private
  #/login
  #/logout
back-end
  /user-data
  /login
  /logout
middleware
  check authorized

components
* Home
* AccountInfo
* Button
* List?

redux
* user (object)
* available balance

schema (database shape)
* users
  * id
  * username
  * email
  * auth_id
  * picture
  * balance

stretch goals
* deposit
* debit
* hashrouter

steps
1) start with router 
-index.js (hashrouter)
-App.js
-it's a small app, so we don't need routes.js

when do we use { Switch }
when many routes

steps for redux
1) create store
2) reducer
  -initial state
  -action name
  -action creator
  -reducer
3) call the function
4) dispatch